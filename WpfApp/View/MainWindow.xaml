<Window x:Class="MVVM.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
        xmlns:k="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:toggleSwitch="clr-namespace:ToggleSwitch;assembly=ToggleSwitch"
        xmlns:local="clr-namespace:MVVM"  d:DataContext="{d:DesignInstance Type=local:CommandViewModel}"
        mc:Ignorable="d"        
        Title="grid_pcap" Height="600" Width="700">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <cmd:EventToCommand Command="{Binding Path=OnClosingCommand}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.Resources>
        <local:MultiValueConverter x:Key="MultiValueConverter"/>

        <SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="#e3e9ef" />
        <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="#fff" />
        <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#888" />
        <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#eee" />
        <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#888" />

        <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="2" Name="Border" BorderBrush="{StaticResource ComboBoxNormalBorderBrush}" CornerRadius="0" BorderThickness="1, 1, 1, 1" Background="{StaticResource ComboBoxNormalBackgroundBrush}" />
                <Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="#444" Name="ButtonBorder" CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0" Background="{StaticResource ComboBoxNormalBackgroundBrush}" />
                <Path Name="Arrow" Grid.Column="1" Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z" HorizontalAlignment="Center" Fill="#444" VerticalAlignment="Center" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="#FF8D979E"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                    <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                    <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBorderBrush}"/>
                    <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="#999"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="ComboBoxFlatStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="TextElement.Foreground" Value="Black"/>
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton" Grid.Column="2" ClickMode="Press" Focusable="False" IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                        Template="{StaticResource ComboBoxToggleButtonTemplate}"/>
                            <ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False" HorizontalAlignment="Left" VerticalAlignment="Center" Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                        ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                            <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3" IsReadOnly="{TemplateBinding IsReadOnly}" Visibility="Hidden" Background="Transparent" HorizontalAlignment="Left" VerticalAlignment="Center"
                        Focusable="True" >
                                <TextBox.Template>
                                    <ControlTemplate TargetType="TextBox" >
                                        <Border Name="PART_ContentHost" Focusable="False" />
                                    </ControlTemplate>
                                </TextBox.Template>
                            </TextBox>
                            <Popup Name="Popup" Placement="Bottom" Focusable="False" AllowsTransparency="True" IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}" PopupAnimation="Slide">
                                <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding FrameworkElement.ActualWidth}" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                    <Border Name="DropDownBorder" Background="White" Margin="0, 1, 0, 0" CornerRadius="0" BorderThickness="1,1,1,1" BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"/>
                                    <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                            </Trigger>
                            <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                            </Trigger>
                            <Trigger Property="ComboBox.IsEditable" Value="True">
                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                                <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ComboBoxItem">
                                    <Border Background="{TemplateBinding Background}" BorderThickness="0" Margin="2">
                                        <TextBlock Text="{TemplateBinding Content}" Margin="2" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>

                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="LightBlue" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="BlanchedAlmond" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Grid">
            <Setter Property="Background" Value="Transparent"/>
        </Style>
        <Style TargetType="TextBlock">
            <Setter Property="FontSize" Value="14" />
        </Style>
        <Style TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="HorizontalContentAlignment" Value="Left" />
        </Style>
        <Style x:Key="CheckBoxStyle1" TargetType="CheckBox">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CustomCheckBox" TargetType="CheckBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Border x:Name="Border" Width="15" Height="15" CornerRadius="3" BorderThickness="1">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <GradientStop Color="Gray" Offset="0.0" />
                                            <GradientStop Color="DarkGray" Offset="1.0" />
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <GradientStop Color="White" Offset="0.0" />
                                            <GradientStop Color="LightGray" Offset="1.0" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <Grid>
                                        <Path x:Name="CheckMark" Visibility="Collapsed" Width="10" Height="10" Stroke="Green" StrokeThickness="2" Data="M 0 5 L 3 8 L 10 0" />
                                    </Grid>
                                </Border>
                            </BulletDecorator.Bullet>
                            <ContentPresenter />
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="ScrollDataGridRow"  TargetType="{x:Type local:ScrollDataGrid}" BasedOn="{StaticResource {x:Type DataGrid}}">
            <Setter Property="RowStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type DataGridRow}">
                        <Style.Triggers>
                            <DataTrigger Binding="{ Binding Path=Source_port}"  Value="443">
                                <Setter Property="Background" Value="LawnGreen"/>
                            </DataTrigger>
                            <DataTrigger Binding="{ Binding Path=Dest_port}"  Value="443">
                                <Setter Property="Background" Value="AntiqueWhite"/>
                            </DataTrigger>
                            <DataTrigger Binding="{ Binding Path=Dest_mac}"  Value="ff:ff:ff:ff:ff:ff">
                                <Setter Property="Background" Value="Azure"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                <Setter Property="Background" Value="LightSkyBlue" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TriangleButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="100" />
            <Setter Property="Height" Value="100" />
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Polygon Points="10,5 40,25 10,45" Fill="Green" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0.9" Duration="0:0:0.1" AutoReverse="True"/>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0.9" Duration="0:0:0.1" AutoReverse="True"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SquareButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="100" />
            <Setter Property="Height" Value="100" />
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="10" Background="Red">
                                    <k:Interaction.Triggers>
                                        <k:EventTrigger EventName="click">
                                            <cmd:EventToCommand CommandParameter="{Binding ElementName=btn_r}" Command="{Binding OnStopStreamService, Mode=OneWay}" />
                                        </k:EventTrigger>
                                    </k:Interaction.Triggers>
                                    <ContentPresenter Content="stop" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0.98" Duration="0:0:0.1" AutoReverse="True"/>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0.98" Duration="0:0:0.1" AutoReverse="True"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>


    <Grid Margin="0,10,0,0">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="319*"/>
            <ColumnDefinition Width="381*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="19*"/>
            <RowDefinition Height="0*"/>
            <RowDefinition Height="44*"/>
            <RowDefinition Height="521*"/>
        </Grid.RowDefinitions>

        <StackPanel Margin="0,0,0,0" Orientation="Vertical" Grid.RowSpan="4" Height="58" Width="700" VerticalAlignment="Top" Grid.ColumnSpan="2" HorizontalAlignment="Left" >
            <Button  Style="{StaticResource TriangleButtonStyle}" Width="50"  Margin="5,-5,20,0"  Command="{Binding OnStartStreamService}"  x:Name="btn_g"  RenderTransformOrigin="-0.85,-8.699"  HorizontalAlignment="Left" Grid.RowSpan="3">
                <Button.RenderTransform>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                </Button.RenderTransform>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="click">
                        <cmd:EventToCommand Command="{Binding OnStartStreamService}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
            <Button  Style="{StaticResource SquareButtonStyle}" Margin="58,-150,20,0"  Width="50" Height="30" x:Name="btn_r" Command="{Binding OnStopStreamService}" RenderTransformOrigin="-0.85,-8.699"  HorizontalAlignment="Left">
                <Button.RenderTransform>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                </Button.RenderTransform>
            </Button>

            <StackPanel Margin="0,-158,50,0"  Grid.ColumnSpan="2" HorizontalAlignment="Right" Height="44" Width="510">

                <ComboBox Margin="20,10,50,0" Name="cDevice" Style="{StaticResource ComboBoxFlatStyle}" ItemsSource="{Binding Items}" SelectedItem="{ Binding _SelectedItem}"   Width="300" Height="25" RenderTransformOrigin="0.596,0.774" HorizontalAlignment="Left">
                </ComboBox>

                <!--<toggleSwitch:HorizontalToggleSwitch RenderTransformOrigin="2.682,1.322" Margin="0,-2,0,0" Grid.RowSpan="3" VerticalAlignment="Top" Grid.Column="1" Height="25" Width="88">
                <toggleSwitch:HorizontalToggleSwitch.UncheckedContent>
                    <StackPanel>
                        <TextBlock TextAlignment="Center">FILE</TextBlock>
                    </StackPanel>
                </toggleSwitch:HorizontalToggleSwitch.UncheckedContent>
            </toggleSwitch:HorizontalToggleSwitch>-->


                <toggleSwitch:HorizontalToggleSwitch Margin="220,-30,0,0"  x:Name="chk" IsChecked="False" IsEnabled="{Binding IsComboGprcEnable}"  CheckedContent="GRPC" Width="87" RenderTransformOrigin="0.739,-0.361"  Grid.RowSpan="3" HorizontalAlignment="Right" Grid.Column="1" Height="35" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Checked">
                            <cmd:EventToCommand CommandParameter="{Binding IsChecked, ElementName=chk}" Command="{Binding Path=OnSetGrpcService, Mode=OneWay}" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="Unchecked">
                            <cmd:EventToCommand CommandParameter="{Binding IsChecked, ElementName=chk}" Command="{Binding Path=OnSetGrpcService, Mode=OneWay}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                    <toggleSwitch:HorizontalToggleSwitch.UncheckedContent>
                        <StackPanel>
                            <TextBlock TextAlignment="Center">GRPC</TextBlock>
                        </StackPanel>
                    </toggleSwitch:HorizontalToggleSwitch.UncheckedContent>
                </toggleSwitch:HorizontalToggleSwitch>
            </StackPanel>
        </StackPanel>
        
        
        <local:ScrollDataGrid  Style="{StaticResource ScrollDataGridRow}" IsReadOnly="True" SelectedItem="{Binding  SelectedRow, Mode=TwoWay}"  ItemsSource="{Binding _StreamingData}" AutoGenerateColumns="False" Margin="0,25,0,160"  Grid.Row="2" Grid.RowSpan="2"
              SelectionMode="Single" SelectionUnit="FullRow" Grid.ColumnSpan="2">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDoubleClick">
                    <cmd:EventToCommand Command="{Binding Path=OnDataGridDoubleClickCommand}" PassEventArgsToCommand="True">
                        <cmd:EventToCommand.CommandParameter>
                            <MultiBinding Converter="{StaticResource MultiValueConverter}">
                                <Binding />
                                <Binding RelativeSource="{RelativeSource AncestorType= local:ScrollDataGrid}" Path="SelectedItem" />
                            </MultiBinding>
                        </cmd:EventToCommand.CommandParameter>
                    </cmd:EventToCommand>
                </i:EventTrigger>
            </i:Interaction.Triggers>
    
            <DataGrid.Columns>
                <DataGridTextColumn Header="Source_ip"  Width="120" Binding="{Binding Source_ip}"   />
                <DataGridTextColumn Header="Source_port" Width="50" Binding="{Binding Source_port}" />
                <DataGridTextColumn Header="Dest_ip" Width="120" Binding="{Binding Dest_ip}" />
                <DataGridTextColumn Header="Dest_port" Width="50" Binding="{Binding Dest_port}" />
                <DataGridTextColumn Header="Source_mac" Width="120" Binding="{Binding Source_mac}" />
                <DataGridTextColumn Header="Dest_mac" Width="120" Binding="{Binding Dest_mac}" />
                <DataGridTemplateColumn Header="Select">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox Style="{StaticResource CustomCheckBox}"  IsChecked="{Binding IsSelected}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </local:ScrollDataGrid>
    </Grid>

</Window>
