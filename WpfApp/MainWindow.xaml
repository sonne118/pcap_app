<Window x:Class="wpfapp.MainWindow"
        xmlns:ctls="clr-namespace:wpfapp.Controls" 
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:ii="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:iii="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
        xmlns:cmdd="http://www.galasoft.ch/mvvmlight"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:behavior="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:local="clr-namespace:wpfapp.ViewModel" xmlns:cm1="http://www.galasoft.ch/mvvmlight"
        xmlns:toggleSwitch="clr-namespace:ToggleSwitch;assembly=ToggleSwitch"
        mc:Ignorable="d" Name="home"
        Title="MainWindow" Height="650" Width="1000"
        WindowStartupLocation="CenterScreen" WindowStyle="None"
        Background="Transparent" AllowsTransparency="True"
        ResizeMode="NoResize" FontFamily="PCAP" 
        DataContext="{Binding Main, Source={StaticResource ViewModelLocator}}">

    <Window.Resources>
        <local:EventArgsConverter x:Key="EventArgsConverter"/>
    </Window.Resources>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <cmd:EventToCommand Command="{Binding Path=OnClosingCommand}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Border Background="{DynamicResource PrimaryBackgroundColor}"
            CornerRadius="8">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Border Grid.Column="0"
                    Background="{DynamicResource SecundaryBackgroundColor}"
                    CornerRadius="8 0 0 8">
                <Grid x:Name="GridNav" Width="60">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="60"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0">
                        <Border 
                              Margin="14 0 0 0"
                              Width="32" Height="24"
                              HorizontalAlignment="Left">
                        </Border>

                        <Label Content="PCAP"
                               Foreground="{DynamicResource PrimaryTextColor}"
                               FontWeight="Bold"
                               FontSize="16"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Left"
                               Margin="60 0 0 0"/>
                    </Grid>

                    <!-- Start: MenuItem -->
                    <StackPanel Grid.Row="1" Margin="-1 40 0 20">
                        <Button x:Name="btnHome" Command="{Binding HomeCommand}" Style="{DynamicResource PopupButtonStyle}"  MouseEnter="btnHome_MouseEnter" MouseLeave="btnHome_MouseLeave" >
                            <ctls:MenuItem GroupName="MenuItem" IndicatorBrush="{DynamicResource PrimaryBlueColor}" Icon="{DynamicResource home}" IconWidth="16" Text="Home" VerticalAlignment="Center"/>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <cmd:EventToCommand Command="{Binding Path=HomeCommand }"  />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Button>
                        <Button x:Name="btnDashboard" Command="{Binding DashboardCommand}" Style="{DynamicResource PopupButtonStyle}"  MouseEnter="btnDashboard_MouseEnter" MouseLeave="btnDashboard_MouseLeave">
                            <ctls:MenuItem GroupName="MenuItem" IndicatorBrush="{DynamicResource PrimaryBlueColor}" Icon="{DynamicResource dashboard}" IconWidth="16" Text="Dashboard" VerticalAlignment="Center"/>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <cmd:EventToCommand Command="{Binding Path=DashboardCommand }"  />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Button>
                        <Button x:Name="btnFile" Style="{DynamicResource PopupButtonStyle}"  MouseEnter="btnFile_MouseEnter" MouseLeave="btnFile_MouseLeave">
                            <ctls:MenuItem GroupName="MenuItem" IndicatorBrush="{DynamicResource PrimaryBlueColor}" Icon="{DynamicResource file}" IconWidth="16" Text="Pcap file " VerticalAlignment="Center"/>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <cmd:EventToCommand Command="{Binding Path= TreeCommand }"  />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Button>
                        <Button x:Name="btnSetting" Style="{DynamicResource PopupButtonStyle}"  MouseEnter="btnSetting_MouseEnter" MouseLeave="btnSetting_MouseLeave">
                            <ctls:MenuItem GroupName="MenuItem" IndicatorBrush="{DynamicResource PrimaryBlueColor}" Icon="{DynamicResource settings}" IconWidth="16" Text="Setting" VerticalAlignment="Center"/>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <cmd:EventToCommand Command="{Binding Path= SettingsCommand }"  />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Button>
                    </StackPanel>
                    <!-- End: MenuItem -->

                    <!-- Start: Popup User Control -->
                    <Popup x:Name="Popup"  AllowsTransparency="True"  HorizontalOffset="0" VerticalOffset="10">
                        <ctls:UserPopup x:Name="Header" Foreground="{DynamicResource PrimaryTextColor}"/>
                    </Popup>
                    <!-- End: Popup User Control -->

                </Grid>
            </Border>

            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="60"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <StackPanel  HorizontalAlignment="Left" VerticalAlignment="Top" >
                    <ToggleButton x:Name="Tg_Btn" Grid.Column="1" VerticalAlignment="Center" Style="{DynamicResource iToggleButtonStyle}" HorizontalAlignment="Left" BorderThickness="0" Background="Transparent" Margin="10,15,0,15" Height="30" Width="30">
                        <ToggleButton.Triggers>
                            <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                                <BeginStoryboard>
                                    <Storyboard x:Name="HideStackPanel">
                                        <DoubleAnimation Storyboard.TargetName="GridNav" Storyboard.TargetProperty="Width" BeginTime="0:0:0" From="210" To="60" Duration="0:0:0.5">
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="ToggleButton.Checked">
                                <BeginStoryboard>
                                    <Storyboard x:Name="ShowStackPanel">
                                        <DoubleAnimation Storyboard.TargetName="GridNav" Storyboard.TargetProperty="Width" BeginTime="0:0:0" From="60" To="210" Duration="0:0:0.5">
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ToggleButton.Triggers>
                    </ToggleButton>
                </StackPanel>



                <StackPanel HorizontalAlignment="Left"  VerticalAlignment="Center"  Height="40" Orientation="Horizontal" FlowDirection="LeftToRight" Width="562" Margin="80,0,0,0" >
                    <!--<StackPanel Width="100"   >-->
                    <Button Margin="30,6,0,0" Style="{StaticResource TriangleButtonStyle}" Width="30" Height="30" Command="{Binding OnStartStreamServiceCommand}"  x:Name="btn_g"  RenderTransformOrigin="-0.85,-8.699" Click="btn_g_Click"  >
                        <Button.RenderTransform>
                            <ScaleTransform ScaleX="1" ScaleY="1"/>
                        </Button.RenderTransform>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="click">
                                <cmd:EventToCommand Command="{Binding OnStartStreamServiceCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>

                    <Button Margin="10,0,0,0" Style="{StaticResource SquareButtonStyle}"   Width="19" Height="18" x:Name="btn_r" Command="{Binding OnStopStreamServiceCommand}" RenderTransformOrigin="-0.85,-8.699"  >
                        <Button.RenderTransform>
                            <ScaleTransform ScaleX="1" ScaleY="1"/>
                        </Button.RenderTransform>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="click">
                                <cmd:EventToCommand CommandParameter="{Binding ElementName=btn_r}" Command="{Binding OnStopStreamServiceCommand, Mode=OneWay}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <!--</StackPanel>-->
                    
                    <ComboBox Margin="30,0,0,0" x:Name="cDevice" Style="{StaticResource ComboBoxFlatStyle}" ItemsSource="{Binding Items}" SelectedItem="{Binding _SelectedItem}"   Width="330" Height="26" RenderTransformOrigin="0.596,0.774" SelectionChanged="cDevice_SelectionChanged" />
                    <toggleSwitch:HorizontalToggleSwitch  x:Name="chk" IsChecked="False" IsEnabled="{Binding IsComboGprcEnable}" Margin="20,0,0,0" CheckedContent="GRPC" Width="87" >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Checked">
                                <cmd:EventToCommand CommandParameter="{Binding IsChecked, ElementName=chk}" Command="{Binding OnSetGrpcServiceCommand, Mode=OneWay}" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="Unchecked">
                                <cmd:EventToCommand CommandParameter="{Binding IsChecked, ElementName=chk}" Command="{Binding OnSetGrpcServiceCommand, Mode=OneWay}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <toggleSwitch:HorizontalToggleSwitch.UncheckedContent>
                            <StackPanel>
                                <TextBlock TextAlignment="Center"><Run Text="GRPC"/></TextBlock>
                            </StackPanel>
                        </toggleSwitch:HorizontalToggleSwitch.UncheckedContent>
                    </toggleSwitch:HorizontalToggleSwitch>
                </StackPanel>

                <StackPanel Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,5,10,0" Height="30" Orientation="Horizontal" FlowDirection="RightToLeft" Grid.RowSpan="2">
                    <Button x:Name="btnClose" Style="{StaticResource IconButtonsStyle}" Content="{DynamicResource close}" Tag="IsCloseButton" Click="btnClose_Click"/>
                    <Button x:Name="btnRestore" Margin="5,0" Click="btnRestore_Click">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource IconButtonsStyle}">
                                <Setter Property="Content" Value="{DynamicResource maximize}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=home, Path=WindowState}" Value="Maximized">
                                        <Setter Property="Content" Value="{DynamicResource restore}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button x:Name="btnMinimize" Style="{DynamicResource IconButtonsStyle}" Content="{DynamicResource minimize}" Click="btnMinimize_Click" IsCancel="True"/>
                </StackPanel>

                <Frame Grid.Row="1"  Content="{Binding CurrentView}"
                       Name="fContainer"
                       Margin="20"
                       NavigationUIVisibility="Hidden">
                </Frame>
            </Grid>
        </Grid>
    </Border>
</Window>
