version: '3.8'

services:  
  loadbalancing.api:
    image: ${DOCKER_REGISTRY-}loadbalancing.api
    container_name: loadbalancing.api
    hostname: http://localhost:5010
    build:
      context: .
      dockerfile: server/Dockerfile
    #cpus: 1
    #mem_limit: "0.5G"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=https://+:;http://+
      - ASPNETCORE_HTTPS_PORT=5000  
    ports:   
      - 5010:5000    
    networks:
      - proxybackend

  loadbalancing.api2:
    image: ${DOCKER_REGISTRY-}loadbalancing.api2
    container_name: loadbalancing.api2
    hostname: http://localhost:5011
    build:
      context: .
      dockerfile: server/Dockerfile
    #cpus: 1
    #mem_limit: "0.5G"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=https://+:;http://+
      - ASPNETCORE_HTTPS_PORT=5000 
    ports:           
      - 5011:5000
    networks:
      - proxybackend

  loadbalancing.api3:
    image: ${DOCKER_REGISTRY-}loadbalancing.api3
    container_name: loadbalancing.api3
    hostname: http://localhost:5012
    build:
      context: .
      dockerfile: server/Dockerfile
    #cpus: 1
    #mem_limit: "0.5G"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=https://+:;http://+
      - ASPNETCORE_HTTPS_PORT=5000 
    ports:           
       - 5012:5000
    networks:
      - proxybackend

  loadbalancing.api4:
    image: ${DOCKER_REGISTRY-}loadbalancing.api4
    container_name: loadbalancing.api4
    hostname: http://localhost:5013
    build:
      context: .
      dockerfile: server/Dockerfile
   # cpus: 1
    #mem_limit: "0.5G"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production 
      - ASPNETCORE_URLS=https://+:;http://+
      - ASPNETCORE_HTTPS_PORT=5000  
    ports:
      - 5013:5000
    networks:
      - proxybackend

  loadbalancing.api5:
    image: ${DOCKER_REGISTRY-}loadbalancing.api5
    container_name: loadbalancing.api5
    hostname: http://localhost:5014
    build:
      context: .
      dockerfile: server/Dockerfile
    #cpus: 1
    #mem_limit: "0.5G"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=https://+:;http://+
      - ASPNETCORE_HTTPS_PORT=5000 - 
    ports:
     - 5014:5000
    networks:
      - proxybackend
 
  loadbalancer:
    image: ${DOCKER_REGISTRY-}loadbalancer
    #volumes:       
    #  - "./ssl:/ssl"
    container_name: loadbalancer
    build:
      context: .
      dockerfile: loadbalancer/Dockerfile
    cpus: 1
    #mem_limit: "0.5G"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:;http://+
      - ASPNETCORE_HTTPS_PORT=5001         
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/server.pfx   
      - ASPNETCORE_Kestrel__Certificates__Default__Password=11111 
    volumes:
      - ${USERPROFILE}\.aspnet\https:/https/
    ports:               
      - 5000:5000 
      - 5001:5001   
    depends_on:
     loadbalancing.api:
      condition: service_started
     loadbalancing.api2:
      condition: service_started
     loadbalancing.api3:
      condition: service_started
     loadbalancing.api4:
      condition: service_started
     loadbalancing.api5:
      condition: service_started
    networks:
      - proxybackend
  


  sqlite:
    container_name: sqlite-container
    image: nouchka/sqlite3
    volumes:
      - sqlite-data:/mydatabase
    ports:
      - "5432:5432"
    restart: always

volumes:
  sqlite-data:

networks:
  proxybackend:
    name: proxybackend
    driver: bridge

